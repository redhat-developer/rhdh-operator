# for main branch, use next tags; for 1.y branches, use :latest tags
name: Build and push operator, bundle, and catalog images

on:
  push:
    branches: 
      - main
      - rhdh-1.[0-9]+
      - 1.[0-9]+.x
      - release-1.[0-9]+

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  REGISTRY: quay.io

jobs:
  next-build:
    name: Next build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0

      # check changes in this commit for regex include and exclude matches
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@d6e91a2266cdb9d62096cebf1e8546899c6aa18f # v45.0.6
        with:
          files: |
            .github/workflows/next-container-build.yaml
            Makefile
            **/*.go
            bundle/**
            config/**
            go.mod
            go.sum
            LICENSE
            **/Dockerfile
            **/Containerfile
            **/*.Dockerfile
            **/.dockerignore
          files_ignore: |
            **/*.md
            **/*.adoc
            .rhdh/**
            tests/**

      - name: Get the last commit short SHA
        # run this stage only if there are changes that match the includes and not the excludes
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          SHORT_SHA=$(git rev-parse --short HEAD)
          echo "SHORT_SHA=$SHORT_SHA" >> $GITHUB_ENV
          BASE_VERSION=$(grep -E "^VERSION \?=" Makefile | sed -r -e "s/.+= //") # 0.0.1
          echo "BASE_VERSION=$BASE_VERSION" >> $GITHUB_ENV

      - name: Setup Go
        # run this stage only if there are changes that match the includes and not the excludes
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: actions/setup-go@3041bf56c941b39c61721a86cd11f3bb1338122a # v5
        with:
          go-version-file: 'go.mod'

      - name: Login to quay.io
        # run this stage only if there are changes that match the includes and not the excludes
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ vars.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_TOKEN }}

      - name: Build and push operator, bundle, and catalog images
        # run this stage only if there are changes that match the includes and not the excludes
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          # install skopeo, podman
          sudo apt-get -y update; sudo apt-get -y install skopeo podman

          export CONTAINER_TOOL=podman
          latestNext="next"
          # for main branch, use next tags; for 1.y branches, use :latest tags
          if [[ $(git rev-parse --abbrev-ref HEAD) != "main" ]]; then
            latestNext="latest" 
          fi

          export VERSION=${{ env.BASE_VERSION }}

          set -ex

          # build 4 container images with a 14d expiry
          CONTAINER_TOOL=${CONTAINER_TOOL} VERSION=${VERSION} make release-build

          # now copy images from local cache to quay, using 0.0.1-next-f00cafe, 0.0.1-next, and next tags
          for image in operator operator-bundle operator-catalog; do
            podman push -q quay.io/rhdh-community/${image}:${VERSION} docker://quay.io/rhdh-community/${image}:${VERSION}
            skopeo --insecure-policy copy --all docker://quay.io/rhdh-community/${image}:${VERSION} docker://quay.io/rhdh-community/${image}:${VERSION}-${{ env.SHORT_SHA }}
            skopeo --insecure-policy copy --all docker://quay.io/rhdh-community/${image}:${VERSION} docker://quay.io/rhdh-community/${image}:${latestNext}
          done
        env:
          # to avoid throttling on RHD org, use GH token
          GH_TOKEN: ${{ secrets.RHDH_BOT_TOKEN }}
