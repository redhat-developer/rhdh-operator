name: PR Test operator

on:
  pull_request_target:
      types: [opened, synchronize, reopened, ready_for_review]
      branches: 
      - main
      - rhdh-1.[0-9]+
      - 1.[0-9]+.x
      - release-1.[0-9]+
jobs:
  authorize:
    # The 'external' environment is configured with the repo maintainers team as required reviewers.
    # All the subsequent jobs in this workflow 'need' this job, which will require manual approval for PRs coming from external forks.
    # see list of approvers in OWNERS file
    environment:
      ${{ (github.event.pull_request.head.repo.full_name == github.repository ||
        contains(fromJSON('["gazarenkov","nickboldt","rm3l","kim-tsao","kadel","Fortune-Ndlovu","subhashkhileri","zdrapela","openshift-cherrypick-robot"]'), github.event.pull_request.user.login)) && 'internal' || 'external' }}
    runs-on: ubuntu-latest
    steps:
      - name: approved
        run: |
          echo "âœ“"

  pr-validate:
    name: PR Validate
    runs-on: ubuntu-latest
    needs: authorize
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          fetch-depth: 0
          repository: ${{github.event.pull_request.head.repo.full_name}}
          ref: ${{ github.event.pull_request.head.sha }}

      # check changes in this commit for regex include and exclude matches
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@24d32ffd492484c1d75e0c0b894501ddb9d30d62 # v47.0.0
        with:
          files: |
            .github/workflows/pr.yaml
            Makefile
            **/*.go
            bundle/**
            config/**
            go.mod
            go.sum
          files_ignore: |
            **/*.md
            **/*.adoc
            .rhdh/** 

      - name: List all changed files (for troubleshooting)
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
        run: |
          for file in ${ALL_CHANGED_FILES}; do
            echo "$file was changed"
          done

      - name: Setup Go
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6
        with:
          go-version-file: 'go.mod'

      - name: Store build timestamp
        if: steps.changed-files.outputs.any_changed == 'true'
        run: echo "BUILD_TIME=$(date +'%Y-%m-%dT%H:%M:%S')" >> $GITHUB_ENV

      # gosec needs a "build" stage so connect it to the lint step which we always do
      - name: Build
        if: steps.changed-files.outputs.any_changed == 'true'
        run: make lint

      - name: Create Kind cluster
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: helm/kind-action@a1b0e391336a6ee6713a0583f8c6240d70863de3 # v1.12.0
        with:
          cluster_name: test-cluster
          ignore_failed_clean: true

      - name: Run Controller
        # run this stage only if there are changes that match the includes and not the excludes
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          # Need to 'make install' first, so that the necessary tool binaries (like controller-gen) can be downloaded locally.
          # Otherwise, we might end up with a race condition where the tool binary is not yet downloaded,
          # but the `make test` command tries to use it.
          make manifests generate fmt vet install
          make run &

      - name: Test
        # run this stage only if there are changes that match the includes and not the excludes
        if: steps.changed-files.outputs.any_changed == 'true'
        run: make test

      - name: Generic Integration test
        # run this stage only if there are changes that match the includes and not the excludes
        # perform it on backstage.io for speed
        if: steps.changed-files.outputs.any_changed == 'true'
        run: make integration-test PROFILE=backstage.io USE_EXISTING_CLUSTER=true USE_EXISTING_CONTROLLER=true

      - name: RHDH specific Integration test
        # run this stage only if there are changes that match the includes and not the excludes
        if: steps.changed-files.outputs.any_changed == 'true'
        run: make integration-test ARGS='--focus "create default rhdh"' USE_EXISTING_CLUSTER=true USE_EXISTING_CONTROLLER=true

      - name: Run Gosec Security Scanner
        if: steps.changed-files.outputs.any_changed == 'true'
        run: make gosec

      - name: Upload SARIF file
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: github/codeql-action/upload-sarif@0499de31b99561a6d14a36a5f662c2a54f91beee # v4
        with:
          # Path to SARIF file relative to the root of the repository
          sarif_file: gosec.sarif
