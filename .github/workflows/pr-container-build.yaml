name: PR Build operator, bundle, and catalog images

on:
  # /!\ Warning: using the pull_request_target event to be able to read secrets. But using this event without the cautionary measures described below
  # may allow unauthorized GitHub users to open a “pwn request” and exfiltrate secrets.
  # As recommended in https://iterative.ai/blog/testing-external-contributions-using-github-actions-secrets,
  # we are adding an 'authorize' job that checks if the workflow was triggered from a fork PR. In that case, the "external" environment
  # will prevent the job from running until it's approved manually by human intervention.
  pull_request_target:
    types: [opened, synchronize, reopened, ready_for_review]
    branches: 
      - main
      - rhdh-1.[0-9]+
      - 1.[0-9]+.x
      - release-1.[0-9]+

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.event.pull_request.head.ref }}
  cancel-in-progress: true

env:
  REGISTRY: ${{ vars.REGISTRY }}

jobs:
  authorize:
    # The 'external' environment is configured with the repo maintainers team as required reviewers.
    # All the subsequent jobs in this workflow 'need' this job, which will require manual approval for PRs coming from external forks.
    # see list of approvers in OWNERS file
    environment:
      ${{ (github.event.pull_request.head.repo.full_name == github.repository ||
      contains(fromJSON('["gazarenkov","nickboldt","rm3l","kim-tsao","kadel","Fortune-Ndlovu","subhashkhileri","zdrapela","openshift-cherrypick-robot"]'), github.event.pull_request.user.login)) && 'internal' || 'external' }}
    runs-on: ubuntu-latest
    steps:
      - name: approved
        run: |
          echo "✓"

  pr-build:
    name: PR Publish
    runs-on: ubuntu-latest
    needs: authorize
    permissions:
      contents: read
      packages: write
      pull-requests: write

    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          fetch-depth: 0
          repository: ${{github.event.pull_request.head.repo.full_name}}
          ref: ${{ github.event.pull_request.head.sha }}

      # check changes in this commit for regex include and exclude matches
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@ed68ef82c095e0d48ec87eccea555d944a631a4c # v46.0.5
        with:
          files: |
            .github/workflows/pr-container-build.yaml
            Makefile
            **/*.go
            bundle/**
            config/**
            go.mod
            go.sum
            LICENSE
            **/Dockerfile
            **/Containerfile
            **/*.Dockerfile
            **/.dockerignore
          files_ignore: |
            **/*.md
            **/*.adoc
            .rhdh/**
            tests/** 

      - name: List all changed files (for troubleshooting)
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
        run: |
          for file in ${ALL_CHANGED_FILES}; do
            echo "$file was changed"
          done

      - name: Setup Go
        # run this stage only if there are changes that match the includes and not the excludes
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5
        with:
          go-version-file: 'go.mod'

      - name: Get the last commit short SHA of the PR
        # run this stage only if there are changes that match the includes and not the excludes
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          SHORT_SHA=$(git rev-parse --short ${{ github.event.pull_request.head.sha }})
          echo "SHORT_SHA=$SHORT_SHA" >> $GITHUB_ENV
          BASE_VERSION=$(grep -E "^VERSION \?=" Makefile | sed -r -e "s/.+= //") # 0.0.1
          echo "BASE_VERSION=$BASE_VERSION" >> $GITHUB_ENV

      - name: Login to registry (${{env.REGISTRY}})
        # run this stage only if there are changes that match the includes and not the excludes
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ vars.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_TOKEN }}

      - name: Build and push operator, bundle, and catalog images
        # run this stage only if there are changes that match the includes and not the excludes
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          # install skopeo, podman
          sudo apt-get -y update; sudo apt-get -y install skopeo podman

          export CONTAINER_TOOL=podman 
          export VERSION=${{ env.BASE_VERSION }}-pr-${{ github.event.number }}-${{ env.SHORT_SHA }} 
          export REGISTRY_WITH_ORG=${{ env.REGISTRY }}/${{ env.REGISTRY_ORG }}
          export OPERATOR_IMAGE_NAME=${OPERATOR_IMAGE_NAME:-operator}
          export IMAGE_TAG_BASE=${REGISTRY_WITH_ORG}/${OPERATOR_IMAGE_NAME}

          set -ex

          # build 4 container images with a 14d expiry
          CONTAINER_TOOL=${CONTAINER_TOOL} VERSION=${VERSION} make lint release-build

          # now copy images from local cache to quay, using 0.0.1-pr-123-f00cafe and 0.0.1-pr-123 tags
          for image in ${OPERATOR_IMAGE_NAME} ${OPERATOR_IMAGE_NAME}-bundle ${OPERATOR_IMAGE_NAME}-catalog; do
            podman push -q ${REGISTRY_WITH_ORG}/${image}:${VERSION} docker://${REGISTRY_WITH_ORG}/${image}:${VERSION}
            skopeo --insecure-policy copy --all docker://${REGISTRY_WITH_ORG}/${image}:${VERSION} docker://${REGISTRY_WITH_ORG}/${image}:${VERSION}
            skopeo --insecure-policy copy --all docker://${REGISTRY_WITH_ORG}/${image}:${VERSION} docker://${REGISTRY_WITH_ORG}/${image}:${VERSION%-*}
          done
        env:
          REGISTRY_ORG: ${{ vars.REGISTRY_ORG }}
          OPERATOR_IMAGE_NAME: ${{ vars.OPERATOR_IMAGE_NAME }}
          # to avoid throttling on RHD org, use GH token
          GH_TOKEN: ${{ secrets.RHDH_BOT_TOKEN }}
      - name: Comment image links in PR
        # run this stage only if there are changes that match the includes and not the excludes
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7
        with:
          script: |
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'PR images are available:<br/><ol><li>https://quay.io/rhdh-community/operator:${{ env.BASE_VERSION }}-pr-${{ github.event.number }}-${{ env.SHORT_SHA }}</li><li>https://quay.io/rhdh-community/operator-bundle:${{ env.BASE_VERSION }}-pr-${{ github.event.number }}-${{ env.SHORT_SHA }}</li><li>https://quay.io/rhdh-community/operator-catalog:${{ env.BASE_VERSION }}-pr-${{ github.event.number }}-${{ env.SHORT_SHA }}</li></ol>'
            })
