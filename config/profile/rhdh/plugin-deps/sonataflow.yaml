apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-knative-to-sonataflow-and-workflows # hardcoded
spec:
  podSelector: {}
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              # Allow knative events to be delivered to workflows.
              kubernetes.io/metadata.name: knative-eventing
        - namespaceSelector:
            matchLabels:
              # Allow auxiliary knative function for workflow (such as m2k-save-transformation)
              kubernetes.io/metadata.name: knative-serving
---
# NetworkPolicy to unblock incoming traffic to the namespace
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-external-communication # hardcoded
spec:
  podSelector: {}
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              # Allow knative events to be delivered to workflows.
              policy-group.network.openshift.io/ingress: ""
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-intra-network # hardcoded
spec:
  # Apply this policy to all pods in the namespace
  podSelector: {}
  # Specify policy type as 'Ingress' to control incoming traffic rules
  policyTypes:
    - Ingress
  ingress:
    - from:
        # Allow ingress from any pod within the same namespace
        - podSelector: {}
---
# NetworkPolicy to allow openshift-user-workload-monitoring pods to access all pods within the workflow's namespace
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-monitoring-to-sonataflow-and-workflows # hardcoded
spec:
  # Apply this policy to all pods in the namespace
  podSelector: {}
  # Specify policy type as 'Ingress' to control incoming traffic rules
  policyTypes:
    - Ingress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              # Allow openshift-user-workload-monitoring pods to access the workflow.
              kubernetes.io/metadata.name: openshift-user-workload-monitoring
---
apiVersion: sonataflow.org/v1alpha08
kind: SonataFlowPlatform
metadata:
  name: sonataflow-platform
spec:
  monitoring:
    enabled: true
  services:
    dataIndex:
      enabled: true
      persistence:
        postgresql:
          secretRef:
            name: backstage-psql-secret-{{backstage-name}}
            userKey: POSTGRES_USER
            passwordKey: POSTGRES_PASSWORD
          serviceRef:
            name: backstage-psql-{{backstage-name}}
            namespace: {{backstage-ns}}
            databaseName: backstage_plugin_orchestrator
    jobService:
      enabled: true
      persistence:
        postgresql:
          secretRef:
            name: backstage-psql-secret-{{backstage-name}}
            userKey: POSTGRES_USER
            passwordKey: POSTGRES_PASSWORD
          serviceRef:
            name: backstage-psql-{{backstage-name}}
            namespace: {{backstage-ns}}
            databaseName: backstage_plugin_orchestrator
